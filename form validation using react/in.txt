import React, { useState } from 'react';
function FormValidation() {
const [formData, setFormData] = useState({
username: '',
password: ''
});
const [errors, setErrors] = useState({
username: '',
password: ''
});
const [isSubmitted, setIsSubmitted] = useState(false);
function handleChange(e) {
const { name, value } = e.target;
setFormData({
...formData,
[name]: value
});
}
function handleSubmit(e) {
e.preventDefault();
let errors = {};
if (!formData.username.trim()) {
errors.username = 'Username is required';
}
if (!formData.password.trim()) {
errors.password = 'Password is required';
}
setErrors(errors);
if (Object.keys(errors).length === 0) {
setIsSubmitted(true);
console.log('Form submitted:', formData);
}
}
return (

<div>
<h2>User Registration</h2>
{isSubmitted ? 
(

<p>Form successfully submitted!</p>

) : (
<form onSubmit={handleSubmit}>
<div>
<label htmlFor="username">Username:</label>
<input type="text" id="username" name="username"
value={formData.username}
onChange={handleChange}
/>
{
errors.username && <span style=
{
{ 
    color: 'red'
}
}>
  {errors.username}
</span>
}
</div>
<div>
<label htmlFor="password">Password:</label>
<input type="password" id="password" name="password"
value={formData.password}
onChange={handleChange}
/>
{
errors.password && <span style=
{
{
   color: 'red'
}
}>{errors.password}</span>
}
</div>
<button type="submit">Submit</button>

</form>
)
}
</div>

);
}
export default FormValidation;